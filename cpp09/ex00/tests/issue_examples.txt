Examples and Explanations of Issues Found in Bitcoin Exchange Calculator

1. Consistent Error Values Issue:
   - The extractValue function returns -42 when it fails to parse a float
   - However, the fillDataBase function checks for val == -1 as an error condition
   - This inconsistency means that invalid values in the database file would not be properly caught

   Example from BitcoinExchange.cpp:
   ```cpp
   float extractValue(const std::string& valueStr) {
       float value;
       std::stringstream  ss(valueStr);

       ss >> value;
       if (ss.fail() || !ss.eof())
           return -42;  // Returns -42 for parsing error
       return value;
   }
   ```

   ```cpp
   // In fillDataBase function:
   float val = extractValue(value);
   if (val == -1) // But checks for -1, not -42!
       throw std::runtime_error("Error: Invalid database value !");
   ```

2. Input Format Flexibility Issue:
   - The parseFile function tries to skip header lines by looking for "date | value"
   - If the input file has a different format or header name, it may not skip it correctly
   - This makes the program fragile against input variations

   Example from BitcoinExchange.cpp:
   ```cpp
   // This code assumes a specific header format
   while (!file.eof()) {
       std::getline(file, line);
       line = strTrim(line, " \\t");
       if (!line.empty()) {
           if (line != "date | value")  // Assumes this exact header format
               file.seekg(((line.size() + 1) * -1) , std::ios::cur);
           break;
       }
   }
   ```

   Potential problems:
   - If the input file header is "Date | Amount", it won't recognize it
   - If input format is "date | value | notes", logic could break
   - If no header is present, the first data line might be incorrectly skipped

3. Additional issue with empty output for missing dates:
   - When a date doesn't exist in the database, the program tries to find the closest previous date
   - However, if the requested date is before any date in the database (like 2008-12-31 when the database starts in 2009), 
     it produces no output at all
   - This can be confusing to users who might think the program failed silently

   Example test result:
   Input: "2008-12-31 | 5" (date before any in database)
   Output: (nothing - no error message, no result)
   Expected: Some indication that no matching date was found